


import tensorflow as tf
from keras.preprocessing.image import *
from numpy import expand_dims
from keras.preprocessing.image import load_img
from keras.preprocessing.image import img_to_array
from keras.preprocessing.image import ImageDataGenerator
import matplotlib.pyplot  as plt
import cv2

'''tf.keras.preprocessing.image.ImageDataGenerator(
    featurewise_center=False,
    samplewise_center=False,
    featurewise_std_normalization=False,
    samplewise_std_normalization=False,
    zca_whitening=False,
    zca_epsilon=1e-06,
    rotation_range=0,
    width_shift_range=0.0,
    height_shift_range=0.0,
    brightness_range=None,
    shear_range=0.0,
    zoom_range=0.0,
    channel_shift_range=0.0,
    fill_mode="nearest",
    cval=0.0,
    horizontal_flip=False,
    vertical_flip=False,
    rescale=None,
    preprocessing_function=None,
    data_format=None,
    validation_split=0.0,
    dtype=None,
)'''

img = load_img(face_locations)



# load the image
plt.figure(figsize=(45,30))

# convert to numpy array
data = img_to_array(img)
print(data,type(data),data.shape)
# expand dimension to one sample
samples = expand_dims(data, 0)

# create image data augmentation generator
datagen = ImageDataGenerator(rotation_range=90,
    #width_shift_range=0.2,
    #height_shift_range=0.2,
    horizontal_flip=True,
    brightness_range=[0.2,1.0],
    #zoom_range=[0.2,0.2],
    featurewise_center=True,
    #rescale=1,
    #zca_whitening=True,
    #zca_epsilon=1e-06,
    preprocessing_function=None,
    featurewise_std_normalization=True)

it = datagen.flow(samples, batch_size=1)

# generate samples and plot
for i in random.randrange(1,5):
	# define subplot
	plt.subplot(330 + 1 + i)
	# generate batch of images
	batch = it.next()
	# convert to unsigned integers for viewing
	image = batch[0].astype('uint8')
	cv2.imshow('image',image)
	cv2.waitKey(0)
# show the figure
#plt.show()



